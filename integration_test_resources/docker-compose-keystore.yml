version: '3.3'

volumes:
  mysql:

services:
  mysql:
    container_name: mysql
    image: mysql:5.7
    restart: always
    environment:
      - MYSQL_HOST=0.0.0.0
      - MYSQL_PORT=33306
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - mysql:/var/lib/mysql
    ports:
      - "33306:3306"
    entrypoint:
      sh -c "
      echo 'SET GLOBAL sql_mode = 'NO_ENGINE_SUBSTITUTION'; CREATE DATABASE IF NOT EXISTS database_production; CREATE DATABASE IF NOT EXISTS database_development; CREATE DATABASE IF NOT EXISTS database_test; CREATE DATABASE IF NOT EXISTS hydra;' > /docker-entrypoint-initdb.d/init.sql;
      /usr/local/bin/docker-entrypoint.sh --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --sql-mode='NO_ENGINE_SUBSTITUTION'
      "
  postgres:
    container_name: postgres
    image: postgres:12
    restart: always
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=root
      # - POSTGRES_DB=database_development
      - POSTGRES_MULTIPLE_DATABASES="database_development","hydra"
    ports:
      - "54320:5432"
    command: ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr"]
    volumes:
      - ./pg-init-scripts:/docker-entrypoint-initdb.d
      # command: ["postgres", "-c", "log_destination=stderr"]
  # mediator:
  #   container_name: mediator
  #   image: maticdiba/mediator_agent:seven
  #   environment:
  #     - MEDIATOR_URL=http://mediator:80
  #     - MEDIATOR_WALLET_PATH=/app/wallet
  #     - MEDIATOR_WALLET_ID=tempagent_id1
  #     - MEDIATOR_WALLET_KEY=tempkey
  #     - GENESIS_FILE=genesis_sandbox
  #   ports:
  #     - '5100:5100'
  localstack:
    container_name: localstack
    volumes:
      - '/tmp/localstack'
    image: localstack/localstack-light:0.12.10
    ports:
      # - '4569:4569' # dynamo
      # - '4571:4571' # elastic
      - '4572:4572' # s3
      # - '4575:4575' # sns
      # - '4576:4576' # sqs
      # - '4579:4579' # ses
      # - '8888:8888' # web interface
      - '4566:4566'   # all
    environment:
      - PORT_WEB_UI=8888
      - SERVICES=sqs,sns,s3,ses
      - DEBUG=1
  #obfuscator:
  #  container_name: obfuscator
  #  image: rpc_obfuscator_server:latest
  #  ports:
  #  - '1111:1111'
  # redis:
  #   restart: always
  #   container_name: redis
  #   image: redis:4.0.10
  #   ports:
  #     - '6378:6379'

  # HYDRA
  hydra-migrate:
    image: oryd/hydra:v1.10.2
    depends_on:
      - mysql
    environment:
      - DSN=mysql://root@tcp(mysql:3306)/hydra
      #- DSN=postgres://root:root@postgres:5432/hydra?sslmode=disable&max_conns=20&max_idle_conns=4
      #  jkojk
    command:
      migrate sql -e --yes
    restart: on-failure

  hydra:
    container_name: hydra
    image: oryd/hydra:v1.10.2
    depends_on:
      - hydra-migrate
    ports:
      - "4444:4444" # Public port
      - "4445:4445" # Admin port
    command:
      serve all --dangerous-force-http
    environment:
      - URLS_SELF_ISSUER=http://127.0.0.1:4444
      - URLS_CONSENT=http://localhost:9000
      - URLS_LOGIN=http://localhost:9000
      - URLS_LOGOUT=http://localhost:9000/logout
      - DSN=mysql://root@tcp(mysql:3306)/hydra
        #- DSN=postgres://root:root@postgres:5432/hydra?sslmode=disable&max_conns=20&max_idle_conns=4
      #- DSN=memory
      - SECRETS_SYSTEM=youReallyNeedToChangeThis
      - OIDC_SUBJECT_TYPES_SUPPORTED=public,pairwise
      - OIDC_SUBJECT_TYPE_PAIRWISE_SALT=youReallyNeedToChangeThis
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672

  redissearch:
    restart: always
    container_name: redissearch
    image: redislabs/redisearch
    ports:
      - '6379:6379'
